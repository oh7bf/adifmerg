.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ADIFMERG 1"
.TH ADIFMERG 1 "2024-01-02" "version 20240102" "Hamradio"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
adifmerg \-  convert, check and merge ADIF files
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBadifmerg\fR \fB\-f\fR file [\fB\-m\fR file|\fB\-M\fR file] [\fB\-b\fR] [\fB\-d\fR] [\fB\-c\fR] [\fB\-i\fR] 
[\fB\-u\fR] [\fB\-a\fR award] [\fB\-o\fR|\fB\-s\fR|\fB\-x\fR|\fB\-X\fR|\fB\-l\fR|\fB\-L\fR|\fB\-e\fR|\fB\-C\fR file|\fB\-T\fR file] 
[\fB\-A\fR record] [\fB\-D\fR record] [\fB\-S\fR record] [\fB\-F\fR record] [\fB\-R\fR record] 
[\fB\-t\fR min] [\fB\-p\fR script] [\fB\-q\fR query] [\fB\-Q\fR all|requested] [\fB\-2\fR] 
[\fB\-N\fR] [\fB\-h\fR] [\fB\-v\fR] [\fB\-V\fR]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The input log file type is recognized from the '.adi', '.adif', '.cbr', 
\&'.csv' or '.txt' suffix in the file name. If the file comes from standard 
input with option '\fB\-f\fR \-', it is assumed to be \s-1ADIF\s0 file. The output is 
either \s-1ADIF,\s0 csv or simple text.
.PP
Two \s-1ADIF\s0 files can be merged to one. In this case the 
output is sorted in ascending time order if both of the input files are 
already sorted. If the \s-1QSO\s0 calls are same in the two files and the times 
match within minutes given by the switch \fB\-t\fR, then the two \s-1ADIF\s0 records 
are merged to one. Data in the records from the first file are not over 
written if the second file has some same records filled with data.
This kind of online merging works only if the two \s-1QSO\s0 records have very close 
the same time and there is no other \s-1QSO\s0 in between the two.
It is a good idea to sort the two files separately using switch \fB\-s\fR 
before trying to merge them.
.PP
For sorting and \s-1QSL\s0 label printing the full file is read into memory. 
Sorting works only for ADIF-files. All other operations are done online 
without reading the full file to memory.
.PP
If one of the output options \fB\-o\fR, \fB\-s\fR, \fB\-x\fR, \fB\-X\fR, \fB\-l\fR or \fB\-L\fR 
is given, the \s-1QSO\s0 record is checked for valid date, start time, band, mode, 
\&\s-1QSL\s0 flag and report. Optionally \fBdxcc\fR by Fabian Kurz \s-1DJ1YFK\s0 can be used 
to check the call sign. For this the switch \fB\-c\fR is used. In this case also 
the \s-1CQ\s0 and \s-1ITU\s0 zones are checked in addition to the continent information.
If this information is missing it is filled into the empty records. 
The \s-1ITU\s0 zone is not necessarily the correct one for large countries.
.PP
If a local file /usr/share/dxcc/cty.plist is available it is read to
a hash for checking the \s-1QSO\s0 data instead of \fBdxcc\fR. This file is available from
Jim Reisert, \s-1AD1C,\s0 http://www.country\-files.com .
.PP
The switch \fB\-C\fR allows to create Cabrillo log from the \s-1ADIF\s0 file and
a template file. The \fI\s-1STX_STRING\s0\fR and \fI\s-1SRX_STRING\s0\fR
are used without modifications as exchange for each \s-1QSO.\s0 Optionally points 
for each \s-1QSO\s0 can be calculated with the script given by switch \fB\-p\fR. 
The \fI\s-1CALL\s0\fR, \fI\s-1BAND\s0\fR, \fI\s-1STX_STRING\s0\fR and \fI\s-1SRX_STRING\s0\fR are passed as 
parameters to the script, which returns the calculate points.
.PP
The switch \fB\-S\fR allows to select QSOs with given value in the record or
with a value between lower and upper limits. If no value is given, any 
non-empty or non-zero value is accepted. The limits are separated by a
comma. The switch \fB\-F\fR can be used to fix bad values in the records.
.PP
Position coordinates can be calculated from Maidenhead locator with switch
\&\fB\-d\fR. Distance to the contacted station is calculated if its position is 
also known.
.PP
The option \fB\-q\fR allows to get different parameters from the \s-1ADIF\s0 file. 
The possible parameters are
.PP
\&\fIbands\fR list of bands
.PP
\&\fIcont\fR list of continents
.PP
\&\fIcountry\fR list of countries
.PP
\&\fIcqz\fR list of \s-1CQ\s0 zones
.PP
\&\fIdxcc\fR list of DXCCs
.PP
\&\fIfirstqso\fR date and time of first \s-1QSO\s0
.PP
\&\fIgrids\fR list of grid squares with 4 characters
.PP
\&\fIgrid6\fR list of grid squares with 6 characters
.PP
\&\fIgrid8\fR list of grid squares with 8 characters
.PP
\&\fIiota\fR list of IOTAs
.PP
\&\fIituz\fR list of \s-1ITU\s0 zones
.PP
\&\fIlastqsl\fR date of last \s-1QSL\s0 received
.PP
\&\fIlasteqsl\fR date of last eQSL received
.PP
\&\fIlastlqsl\fR date of last LoTW \s-1QSL\s0 received
.PP
\&\fIlastqso\fR date and time of last \s-1QSO\s0
.PP
\&\fIllastqsl\fR date of last \s-1QSL\s0 received in format for LoTW query
.PP
\&\fIllastqso\fR date of last \s-1QSO\s0 in format for LoTW query
.PP
\&\fIllastqsot\fR time of last \s-1QSO\s0 in format for LoTW query
.PP
\&\fIlonlat\fR list of longitude and latitude values
.PP
\&\fIlonlatd\fR list of longitude and latitude values in simple decimal format
.PP
\&\fImodes\fR list of modes
.PP
\&\fIncont\fR number of continents
.PP
\&\fIncq\fR number of \s-1CQ\s0 zones
.PP
\&\fIndxcc\fR number of DXCCs
.PP
\&\fIneqslr\fR number of eQSL received
.PP
\&\fIneqsls\fR number of eQSL sent
.PP
\&\fInerr\fR number of errors
.PP
\&\fIngrid\fR number of grid squares
.PP
\&\fIniota\fR number of IOTAs
.PP
\&\fInitu\fR number of \s-1ITU\s0 zones
.PP
\&\fInlonlat\fR number of longitudes/latitudes
.PP
\&\fInlqslr\fR number of LoTW \s-1QSL\s0 received
.PP
\&\fInlqsls\fR number of LoTW \s-1QSL\s0 sent
.PP
\&\fInqslr\fR number of \s-1QSL\s0 received
.PP
\&\fInqsls\fR number of \s-1QSL\s0 sent
.PP
\&\fInqso\fR number of QSOs
.PP
\&\fInsota\fR number of SOTAs
.PP
\&\fInstation\fR number of stations
.PP
\&\fIprops\fR list of propagation modes
.PP
\&\fIsota\fR list of SOTAs
.PP
\&\fIstations\fR list of stations
.PP
\&\fIsubmodes\fR list of submodes
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-f\fR read in \s-1ADIF,\s0 text or csv files
.PP
\&\fB\-m\fR second \s-1ADIF\s0 file for merging
.PP
\&\fB\-M\fR matching merge for received \s-1QSL\s0 cards with possible false QSOs
.PP
\&\fB\-b\fR add band record from frequency
.PP
\&\fB\-c\fR check call sign with cty.plist or dxcc and fill empty \s-1CQ/ITU\s0 zone and continent 
records
.PP
\&\fB\-d\fR calculate position and distance if Maidenhead locator information 
is available
.PP
\&\fB\-a\fR select QSOs with \s-1CREDIT_SUBMITTED\s0 or \s-1CREDIT_GRANTED\s0 field
.PP
\&\fB\-o\fR print \s-1ADIF\s0 file
.PP
\&\fB\-s\fR sort in ascending time order and print \s-1ADIF\s0 file
.PP
\&\fB\-x\fR print csv file
.PP
\&\fB\-X\fR print csv file for \s-1SOTA\s0 database import
.PP
\&\fB\-l\fR print simple list of QSOs
.PP
\&\fB\-L\fR print list of QSOs with all the non empty records
.PP
\&\fB\-i\fR print info on \s-1ADIF\s0 file
.PP
\&\fB\-e\fR print only lines with errors
.PP
\&\fB\-u\fR remove \s-1USERDEF\s0 records
.PP
\&\fB\-t\fR maximum time difference for merging two records, default 5 min
.PP
\&\fB\-C\fR template file to produce Cabrillo log file
.PP
\&\fB\-A\fR add new record to all QSOs, e.g. OWNER_CALLSIGN=XY0ABC
.PP
\&\fB\-D\fR delete record from all QSOs
.PP
\&\fB\-S\fR select only QSOs with given record value, e.g. CALL=AB5XYZ, or between 
limits, e.g. QSO_DATE=19990101,19991231, use 'QSL_SENT=' for any non-empty 
value
.PP
\&\fB\-F\fR fix record value, e.g. MODE=THROB=THRB
.PP
\&\fB\-R\fR remap record to an other, e.g. LOTW_QSLRDATE=QSLRDATE
.PP
\&\fB\-p\fR script to calculate points to each Cabrillo log \s-1QSO\s0
.PP
\&\fB\-q\fR query parameters from \s-1ADIF\s0 file, e.g. lastqsl
.PP
\&\fB\-Q\fR print ascii \s-1QSL\s0 labels for all QSOs with QSL_SENT=N or only for 
requested with QSL_SENT=R
.PP
\&\fB\-T\fR replace \s-1ADIF\s0 tags (e.g. _\|_CALL) in given file for each \s-1QSO\s0 and print 
the resulting file, if \fB\-Q\fR switch is used the \s-1QSL\s0 record tags are printed
.PP
\&\fB\-2\fR search for duplicate QSOs, here \fB\-t\fR can be used to change time range, 
default is 24 hours
.PP
\&\fB\-N\fR print also QSOs with QSO_COMPLETE=NIL or N, by default these QSOs are 
not printed
.PP
\&\fB\-h\fR display a short help text
.PP
\&\fB\-v\fR verbose
.PP
\&\fB\-V\fR print version
.SH "TEXT FILES"
.IX Header "TEXT FILES"
The QSOs in the txt files are listed as follows
.PP
\&\s-1YYYYMMDD HHMM BAND/FREQ\s0  \s-1MODE CALL RSTS RSTR QSLS/R EQSL LOTW PROPAGATION COMMMENT\s0
.PP
Here the date is given with year \s-1YYYY,\s0 month \s-1MM\s0 and day \s-1DD.\s0 The time \s-1HHMM\s0 is
the \s-1UTC\s0 of the start of the \s-1QSO.\s0 This is followed by the band or frequency in 
MHz. Next the mode and call sign are given. The \s-1RSTS\s0 is the sent report and
\&\s-1RSTR\s0 the received report. The \s-1QSLS/R\s0 column has the flags: \s-1QSL\s0 sent Y(es), 
N(o), R(equested), Q(ueued) or I(gnored) and \s-1QSL\s0 sent via B(ureau), D(irect),
E(electronic) or M(anager). For the received QSLs: \s-1QSL\s0 received (Y)es, N(o),
R(equested), I(gnored) or V(verified) and \s-1QSL\s0 received via B(ureau), D(irect),
E(electronic) or M(anager). The eQSL and LoTW flags are first the sent
flag Y, N, R, Q or I followed by the received flag Y, N, R, I or V.
The next column tells the propagation mode and finally the comments in the 
last column.
.PP
If all the QSOs are not with the same station call sign or are from different 
locations, it is useful to have a line with the new station info as follows
.PP
\&\s-1MYCALL MYGRID MYRIG TXPWR\s0
.PP
Here \s-1MYCALL\s0 was the station call sign used, \s-1MYGRID\s0 was the grid square, \s-1MYRIG\s0
the radio and \s-1TXPWR\s0 the transmitter power. When verbosed text file is 
printed with \fB\-l\fR and \fB\-v\fR switches, each new call sign, \s-1QTH\s0 or rig is
printed in this way before the QSOs.
.PP
Corrections to the printed text files can be made and new information can be 
added. The updated text file can then be converted to \s-1ADIF\s0 and merged with 
the original \s-1ADIF\s0 file. When reading in the text file QSOs, the following
key words are recognized in the comments: \fI\s-1QSL\s0\fR, \fIburo\fR, \fI\s-1NIL\s0\fR 
and \fIviaCALL\fR.
The \s-1CQ\s0 zone has the form \fI\s-1EU\-14\s0\fR and \s-1ITU\s0 zone \fII27\fR. 
The known propagation modes,
satellites and satellite modes are converted. The 4, 6, 8 character
long grid square is converted to \s-1ADIF.\s0 The \s-1IOTA\s0 is recognized.
.PP
The station info line that starts with \s-1MYCALL\s0 can have following tags: 
\&\fIciCity\fR, \fIstState\fR, \fIcyCounty\fR and \fIcoCountry\fR. 
For example \fIcoFrance\fR could be used.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Print simple list of QSOs to screen
.PP
adifmerg \-f qso.adi \-l \-v
.PP
Print all known \s-1ADIF\s0 records, modes, bands and csv records
.PP
adifmerg \-V \-v
.PP
Print verbosed info on \s-1ADIF\s0 file
.PP
adifmerg \-f qso.adi \-i \-v
.PP
Add owner call sign and locator to all QSOs
.PP
adifmerg \-f qso.adi \-A OWNER_CALLSIGN=MY0CALL,MY_GRIDSQUARE=LM75kp \-o > file.adi
.PP
Add locator for field day QSOs on September 18 2008
.PP
adifmerg \-f qso.adi \-A MY_GRIDSQUARE=ER38gh23 \-S QSO_DATE=20080918 \-o | adifmerg \-f \- \-m qso.adi \-o > file.adi
.PP
Print QSOs if the distance can be calculated
.PP
adifmerg \-f qso.adi \-l \-d \-S DISTANCE=
.PP
Compare two almost identical files
.PP
adifmerg \-f qso.adi \-l > a.txt
.PP
adifmerg \-f qso2.adi \-l > b.txt
.PP
diff a.txt b.txt
.PP
Create empty \s-1ADIF\s0 file
.PP
echo "" | adifmerg \-f \- \-o > empty.adi
.PP
To add received paper \s-1QSL\s0 cards write them to a file, for example
.PP
20060420 2112 70CM \s-1CW\s0  \s-1ON1FER\s0 \- 579  R\-YB \*(-- \-\- \s-1SAT VO\-52 U/V JB70GB\s0
.PP
20070923 0948 30M  \s-1SSB LT3BB\s0  \-  55  R\-YB \*(-- \-\- Tic \s-1KA48HI\s0
.PP
20070722 1141 40M  \s-1CW\s0  G0/IK4EE  599 559  \-\-YB \*(-- \-\- Hep \s-1EU\-14 EU\-005\s0
.PP
Convert the file to \s-1ADIF\s0
.PP
adifmerg \-f qsls.txt \-A QSLRDATE=20080130 \-o > qsls.adif
.PP
Sort QSOs to ascending time order
.PP
adifmerg \-f qsls.adif \-s > qsls.adi
.PP
Try matching without output to see problems
.PP
adifmerg \-f qsos.adi \-M qsls.adi \-v
.PP
The lines starting with \fIL\fR show changes to the \s-1QSO.\s0 The \fI+\fR means data 
included to the merged file and \fI\-\fR the lost data. Lines with \fIM?\fR mean
that no matching \s-1QSO\s0 was found. If there is a likely candidate in file
\&\fIqsos.adi\fR also a line starting with \fIC:\fR is printed. In this case you need 
to check that both files are sorted and you may need to change \s-1UTC\s0 or use 
larger value for \fI\-t\fR switch. Fix the errors and write the result to a file
.PP
adifmerg \-f qsos.adi \-M qsls.adi \-o > file.adi
.PP
Create \s-1QSO\s0 map
.PP
adifmerg \-f qso.adi \-S MY_GRIDSQUARE=KP32la \-q grid6
.PP
and copy the grid squares for example to
.PP
http://ok2pbq.atesystem.cz/prog/qso_map.php
.PP
To make paper QSLs with LaTeX copy first an example from
.PP
http://fkurz.net/ham/stuff.html
.PP
Put the necessary \s-1ADIF\s0 tags to the LaTeX file. These are the \s-1ADIF\s0 record names
with '_\|_' prefix. In addition for QSLs \fI_\|_DATE\fR and \fI_\|_QSL\fR are defined.
Usually each \s-1QSO\s0 line has \fI_\|_DATE\fR, \fI_\|_TIME_ON\fR, \fI_\|_BAND\fR, \fI_\|_MODE\fR,
\&\fI_\|_RST_SENT\fR, \fI_\|_PROP_MODE\fR and \fI_\|_QSL\fR. The part of the LaTeX file that
repeates itself is put to \fIqsl.tex\fR. Create LaTeX file with \s-1QSO\s0 information
filled in with
.PP
adifmerg \-f mylog.adi \-Q r \-T qsl.tex > cards.tex
.PP
This includes only ADIF-records, where QSL_SENT=R. Add the necessary 
definitions to the beginning of the file and \fI\eend{document}\fR to the end. 
Use \fBpdflatex\fR to produce pdf-file from the LaTeX file.
Once the QSL-cards have been produced, create an ADIF-file with flags
QSL_SENT=Y and QSL_SENT_VIA=B
.PP
adifmerg \-f mylog.adi \-Q r \-o > newlog.adi
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
The \fIadifmerg\fR has been tested with perl v5.10.1. You may need to adapt 
the script to your environment.
.SH "BUGS"
.IX Header "BUGS"
\&\s-1THROB\s0 and \s-1PHONE\s0 modes are not defined in Adif 2.2.7. See the web page below.
Program breaks if \s-1CALL, TIME_ON\s0 or \s-1QSO_DATE\s0 is missing.
.SH "AUTHORS"
.IX Header "AUTHORS"
Jaakko Koivuniemi \s-1OH7BF,\s0 if tod lars ta fb7ho
.SH "LINKS"
.IX Header "LINKS"
http://www.adif.org
.PP
http://www.kkn.net/~trey/cabrillo/
.PP
http://www.country\-files.com
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIGetopt::Std\fR\|(3pm), \fIdxcc\fR\|(1)
